services:
  db: 
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./backend
    container_name: backend
    command: >
      sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      .env
    depends_on:
      - db
      - redis
  
  celery:
    build:
      context: ./backend
    container_name: celery
    command: celery -A backend worker -l INFO
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis

  celery-beat:
    build:
      context: ./backend
    container_name: celery-beat
    command: celery -A backend beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/app
    env_file:
      - .env
    environment:
    - DJANGO_SETTINGS_MODULE=backend.settings
    depends_on:
      - db
      - redis
  
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    env_file:
      - .env
    environment:
      - CHOKIDAR_USEPOLLING=true  
    depends_on:
      - backend
    
volumes:
  postgres_data: